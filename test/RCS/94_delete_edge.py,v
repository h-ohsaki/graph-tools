head	1.2;
access;
symbols;
locks
	ohsaki:1.2; strict;
comment	@# @;


1.2
date	2019.07.06.13.47.43;	author ohsaki;	state Exp;
branches;
next	1.1;

1.1
date	2018.05.26.17.07.53;	author ohsaki;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#!/usr/bin/env python3

from test_more import ok, eq
from graphtools import Graph

g = Graph(directed=True)
g.add_vertices(1, 2, 3)
g.add_edge(1, 2)
g.add_edge(1, 2)
g.add_edge(2, 3)

eq(len(g.edges()), 3)
eq(len(g.get_multiedge_ids(1, 2)), 2)
eq(len(g.neighbors(1)), 1)
eq(len(g.neighbors(2)), 2)

g.delete_edge(1, 2)

eq(len(g.edges()), 2)
eq(len(g.get_multiedge_ids(1, 2)), 1)
eq(len(g.neighbors(1)), 1)
eq(len(g.neighbors(2)), 2)

g.delete_edge(1, 2)

eq(len(g.edges()), 1)
eq(len(g.get_multiedge_ids(1, 2)), 0)
eq(len(g.neighbors(1)), 0)
eq(len(g.neighbors(2)), 1)

g.delete_edge(1, 2)
# must fail

eq(len(g.edges()), 1)
eq(len(g.get_multiedge_ids(1, 2)), 0)
eq(len(g.neighbors(1)), 0)
eq(len(g.neighbors(2)), 1)

g = Graph(directed=False)
g.add_vertices(1, 2, 3)
g.add_edge(1, 2)
g.add_edge(2, 3)
g.delete_edge(1, 2)
eq(len(g.edges()), 1)
eq(len(g.neighbors(1)), 0)
eq(len(g.neighbors(2)), 1)


@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
from simpletest import ok, eq
d38 11
@
