head	1.3;
access;
symbols;
locks
	ohsaki:1.3; strict;
comment	@# @;


1.3
date	2019.07.06.13.47.43;	author ohsaki;	state Exp;
branches;
next	1.2;

1.2
date	2018.05.26.17.09.46;	author ohsaki;	state Exp;
branches;
next	1.1;

1.1
date	2018.05.26.15.38.16;	author ohsaki;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@#!/usr/bin/env python3

from test_more import ok, eq
from graphtools import Graph

g = Graph(directed=False, multiedged=True)
g = g.create_graph('barabasi', 10, 2, 2)
ok(g)
eq(len(g.vertices()), 10)
eq(len(g.edges()), 2 * (2 - 1) / 2 + (10 - 2) * 2)
ok(g.is_connected())

g = Graph(directed=False, multiedged=True)
g = g.create_graph('barabasi', 100, 3, 4)
ok(g)
eq(len(g.vertices()), 100)
eq(len(g.edges()), 3 * (3 - 1) / 2 + (100 - 3) * 4)
ok(g.is_connected())

g = Graph(directed=False, multiedged=True)
g = g.create_graph('ba', 10, 2, 2)
ok(g)
eq(len(g.vertices()), 10)
eq(len(g.edges()), 2 * (2 - 1) / 2 + (10 - 2) * 2)
ok(g.is_connected())
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
from simpletest import ok, eq
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
from simpletest import ok
d9 2
a10 2
ok(len(g.vertices()) == 10)
ok(len(g.edges()) == 2 * (2 - 1) / 2 + (10 - 2) * 2)
d16 2
a17 2
ok(len(g.vertices()) == 100)
ok(len(g.edges()) == 3 * (3 - 1) / 2 + (100 - 3) * 4)
d23 2
a24 2
ok(len(g.vertices()) == 10)
ok(len(g.edges()) == 2 * (2 - 1) / 2 + (10 - 2) * 2)
@
