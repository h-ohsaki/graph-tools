head	1.3;
access;
symbols;
locks
	ohsaki:1.3; strict;
comment	@# @;


1.3
date	2019.07.06.13.47.43;	author ohsaki;	state Exp;
branches;
next	1.2;

1.2
date	2018.05.26.17.11.56;	author ohsaki;	state Exp;
branches;
next	1.1;

1.1
date	2018.05.26.15.38.26;	author ohsaki;	state Exp;
branches;
next	;


desc
@@


1.3
log
@*** empty log message ***
@
text
@#!/usr/bin/env python3

from test_more import ok, eq
from graphtools import Graph

g = Graph(directed=True, multiedged=True)
g.add_edge(1, 2)
g.add_edge(2, 3)
g.add_edge(3, 1)
g.set_vertex_attribute(1, 'foo', 123)
g.set_edge_attribute_by_id(1, 2, 0, 'bar', 456)
T = g.copy_graph()
ok(T.directed())
ok(T.multiedged())
ok(T.has_edge(1, 2))
ok(not T.has_edge(2, 1))
eq(T.get_vertex_attribute(1, 'foo'), 123)
eq(T.get_edge_attribute_by_id(1, 2, 0, 'bar'), 456)

g = Graph(directed=False, multiedged=True)
g.add_edge(1, 2)
g.add_edge(2, 3)
g.add_edge(3, 1)
g.set_vertex_attribute(1, 'foo', 123)
g.set_edge_attribute_by_id(1, 2, 0, 'bar', 456)
T = g.copy_graph()
ok(T.undirected())
ok(T.multiedged())
ok(T.has_edge(1, 2))
ok(T.has_edge(2, 1))
eq(T.get_vertex_attribute(1, 'foo'), 123)
eq(T.get_edge_attribute_by_id(1, 2, 0, 'bar'), 456)
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
from simpletest import ok, eq
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
from simpletest import ok
d17 2
a18 2
ok(T.get_vertex_attribute(1, 'foo') == 123)
ok(T.get_edge_attribute_by_id(1, 2, 0, 'bar') == 456)
d31 2
a32 2
ok(T.get_vertex_attribute(1, 'foo') == 123)
ok(T.get_edge_attribute_by_id(1, 2, 0, 'bar') == 456)
@
